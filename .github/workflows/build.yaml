name: Build
on:
  push:
    branches:
      - master

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Login to Tencent Registry
        uses: docker/login-action@v1
        with:
          registry: ccr.ccs.tencentyun.com
          username: ${{ secrets.TENCENT_DOCKER_USERNAME }}
          password: ${{ secrets.TENCENT_DOCKER_PASSWORD }}

      - name: elasticsearch-prod
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          context: elasticsearch/7.10.1/
          file: elasticsearch/7.10.1/prod.dockerfile
          push: true
          tags: |
            guanmaidocker:7.10.1-prod.1
            ccr.ccs.tencentyun.com/guanmai:7.10.1-prod.1

      # - name: elasticsearch-dev
      #   uses: docker/build-push-action@v2
      #   with:
      #     platforms: linux/amd64
      #     context: elasticsearch/7.10.1/
      #     file: elasticsearch/7.10.1/dev.dockerfile
      #     push: true
      #     tags: |
      #       guanmaidocker:7.10.1-dev.1
      #       ccr.ccs.tencentyun.com/guanmai:7.10.1-dev.1

      # - name: protoc-toolkit
      #   uses: docker/build-push-action@v2
      #   with:
      #     platforms: linux/amd64
      #     context: protoc-toolkit/
      #     push: true
      #     tags: |
      #       guanmaidocker/protoc-toolkit:0.15.4
      #       ccr.ccs.tencentyun.com/guanmai/protoc-toolkit:0.15.4

      # - name: protoc-toolkit
      #   uses: docker/build-push-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      #     repository: ${{ secrets.DOCKER_USERNAME }}/protoc-toolkit
      #     tags: "0.15.3"
      #     path: protoc-toolkit
      # - name: node-with-coscmd
      #   uses: docker/build-push-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      #     repository: ${{ secrets.DOCKER_USERNAME }}/node-with-coscmd
      #     tags: "14-buster"
      #     path: node-with-coscmd
      # - name: kubectl
      #   uses: docker/build-push-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      #     repository: ${{ secrets.DOCKER_USERNAME }}/kubectl
      #     tags: "1.18.10"
      #     path: kubectl
      # - name: upload
      #   run: |
      #     docker login -u $username -p $password
      #     # ./upload.sh quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.32.0 $username/nginx-ingress-controller:0.32.0
      #     # ./upload.sh quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.29.0 $username/nginx-ingress-controller:0.29.0
      #     # ./upload.sh k8s.gcr.io/ingress-nginx/controller:v0.41.2 $username/nginx-ingress-controller:v0.41.2
      #     ./upload.sh k8s.gcr.io/ingress-nginx/controller:v0.43.0 $username/nginx-ingress-controller:v0.43.0
      #   env:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
